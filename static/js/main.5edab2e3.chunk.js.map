{"version":3,"sources":["images/areyouready.jpeg","SubmitModal/submitModal.js","Modal/modal.js","theme.js","useDarkMode.js","global.js","LightDarkToggle/lightDarkToggle.js","AnimalPage/animalPage.js","MathPage/mathPage.js","FilmPage/filmPage.js","GeographyPage/geographyPage.js","TitlePane/titlePane.js","GkPage/gkPage.js","HomePage/homePage.js","index.js"],"names":["SubmitModal","props","useState","isActive","setActive","score","setScore","printKeys","setPrintKeys","handleClick","event","buttonType","target","getAttribute","active","className","onClick","aria-label","id","class","map","key","index","length","radioButtons","answersEntered","document","getElementsByClassName","i","checked","keys1","Object","keys","keys2","answers","incorrectAnswers","incorrectKeys","parseInt","Modal","React","memo","randomFact","setRandomFact","joke","setJoke","useEffect","a","type","getElementById","addEventListener","axios","url","method","fact","data","text","fetchJoke","fetchData","header","setup","punchline","lightTheme","body","toggleBorder","gradient","darkTheme","useDarkMode","theme","setTheme","setMode","mode","window","localStorage","setItem","localTheme","getItem","toggle","homeButton","submitButton","factButton","jokeButton","GlobalStyles","createGlobalStyle","LightDarkToggle","onChange","decodeHtml","html","txt","createElement","innerHTML","value","GkQuestionBox","questionObjects","setQuestionObjects","toggleTheme","themeMode","result","questionObjectsTemp","results","push","correct_answer","questionObj","options","incorrect_answers","concat","array","j","Math","floor","random","temp","shuffle","question","option","optionIndex","name","objindex","MathQuestionBox","FilmQuestionBox","GeographyQuestionBox","homeButtonPress","location","reload","ReactDOM","render","StrictMode","handleButtonPress","TitlePane","HomePage","src","readyImage","alt"],"mappings":"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","file":"static/js/main.5edab2e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/areyouready.be3621b2.jpeg\";","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./submitModal.css\";\nimport {useState} from 'react';\n\nfunction SubmitModal(props) {\n\n    const [isActive, setActive] = useState(false);\n    const [score, setScore] = useState(0);\n    const [printKeys, setPrintKeys] = useState([]);\n\n    function handleClick (event) {\n        let buttonType = event.target.getAttribute('id');\n        if (buttonType === 'okButton' || buttonType === 'closeButton') {\n            setActive(false);\n        }\n    };\n\n    function handleSubmitButtonPress(event) {\n        setActive(true);\n        let radioButtons = [];\n        let answersEntered = {};\n        radioButtons = document.getElementsByClassName('radioButton');\n        for (let i = 0; i < radioButtons.length; i++) {\n          if (radioButtons[i].checked) {\n            let objIndex = radioButtons[i].getAttribute(\"objindex\");\n            answersEntered[''+objIndex] = radioButtons[i].getAttribute('option');\n          }\n        }\n        let keys1 = Object.keys(answersEntered);\n        let keys2 = Object.keys(props.answers);\n        let incorrectAnswers = {};\n        if(keys1.length === keys2.length) {\n          for(let i = 0; i < keys1.length; i++) {\n            if (props.answers[\"\"+i] !== answersEntered[\"\"+i]) {\n              incorrectAnswers[\"\"+i] = answersEntered[\"\"+i];\n            }\n          }\n        }\n        if (Object.keys(answersEntered).length === 0) {\n            setScore(0);\n        } else  {\n            setScore(Object.keys(props.answers).length - Object.keys(incorrectAnswers).length);\n        }\n        let incorrectKeys = Object.keys(incorrectAnswers);\n        setPrintKeys(incorrectKeys.map(key => parseInt(key)+1));\n    };\n\n    const active = isActive ? \"is-active\" : \"\";\n    return(\n        <div className=\"App\">\n        <div className={`modal ${active}`}>\n            <div className=\"modal-background\" />\n            <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">Results</p>\n                <button\n                onClick={handleClick}\n                className=\"delete\"\n                aria-label=\"close\"\n                id=\"closeButton\"\n                />\n            </header>\n            <section className=\"modal-card-body\">\n                <div>\n                    <h3 class=\"title is-3\">Score: {score}/10</h3>\n                    <h4 class=\"title is-4\" id=\"wrongAnswers\">{\n                        (score !== 10) ? <div>\n                            You got the following question(s) wrong: {\n                                printKeys.map((key, index) => {\n                                if (index === printKeys.length - 1) {\n                                    return (<span>{key} </span>)\n                                } else {\n                                    return (<span>{key}, </span>);\n                                }\n                            })}\n                        </div> :\n                        <div>\n                            Congratulations! You won! Try another category to test how smart you truly are!\n                        </div>\n                    }</h4>\n                </div>\n            </section>\n            <footer className=\"modal-card-foot\">\n                <button class=\"button is-black\" onClick={handleClick} id=\"okButton\">\n                    OK\n                </button>\n            </footer>\n            </div> \n        </div>\n\n        <button onClick={handleSubmitButtonPress} class=\" modalButton button is-black\" id=\"submitButton\">\n            Submit\n        </button>\n        </div>\n    );\n}\n\nexport default SubmitModal;\n\n","import React from \"react\";\nimport axios from 'axios/dist/axios';\nimport \"bulma/css/bulma.css\";\nimport \"./modal.css\";\nimport {useState, useEffect} from 'react';\n\nconst Modal = React.memo(function(props) {\n\n    const [isActive, setActive] = useState(false);\n    const [randomFact, setRandomFact] = useState('');\n    const [joke, setJoke] = useState({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (props.type === 'mathFact') {\n                document.getElementById(\"factButton\").addEventListener('click', async () => {\n                    const fact = await axios ({\n                        url: \"http://numbersapi.com/random/math\",\n                        method: 'get',\n                    });\n                    setRandomFact(fact.data);\n                });\n            } else if (props.type === 'fact') {\n                document.getElementById(\"factButton\").addEventListener('click', async () => {\n                    const fact = await axios ({\n                        url: \"https://uselessfacts.jsph.pl/random.json?language=en\",\n                        method: 'get',\n                    });\n                    setRandomFact(fact.data.text);\n                });\n            } else if (props.type === 'joke') {\n                document.getElementById(\"jokeButton\").addEventListener('click', async() => {\n                    const fetchJoke = await axios ({\n                        url: 'https://official-joke-api.appspot.com/random_joke',\n                        method: 'get',\n                    });\n                    setJoke(fetchJoke.data);\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    function handleClick (event) {\n        let buttonType = event.target.getAttribute('id');\n        if (buttonType === 'okButton' || buttonType === 'closeButton') {\n            setActive(false);\n        } else if (buttonType === 'factButton' || buttonType === 'jokeButton') {\n            setActive(true);\n        } \n    };\n    const active = isActive ? \"is-active\" : \"\";\n    return(\n        <div className=\"App\">\n        <div className={`modal ${active}`}>\n            <div className=\"modal-background\" />\n            <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n                <p className=\"modal-card-title\">{props.header}</p>\n                <button\n                onClick={handleClick}\n                className=\"delete\"\n                aria-label=\"close\"\n                id=\"closeButton\"\n                />\n            </header>\n            <section className=\"modal-card-body\">\n                <div>\n                    <h4 class=\"title is-4\">{ (props.type ==='fact' || props.type === 'mathFact') ? \n                        `${randomFact}` :  \n                        <div>\n                            <div>{joke.setup}</div>\n                            <div>{joke.punchline}</div>\n                        </div>\n                    }</h4>\n                </div>\n            </section>\n            <footer className=\"modal-card-foot\">\n                <button class=\"button is-black\" onClick={handleClick} id=\"okButton\">\n                    OK\n                </button>\n            </footer>\n            </div> \n        </div>\n\n        <button onClick={handleClick} class=\"button is-black\" id={props.id}>\n            {props.text}\n        </button>\n        </div>\n    );\n})\n\nexport default Modal;\n\n","export const lightTheme = {\n    body: '#E2E2E2',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n  }\n  \n  export const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n  }","import { useEffect, useState } from 'react';\n\nexport const useDarkMode =  () => {\n  \n  const [theme, setTheme] = useState('light');\n\n  const setMode = (mode) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    let toggle = document.getElementById(\"dark-light-mode\");\n    let homeButton = document.getElementById(\"home\");\n    let submitButton = document.getElementById(\"submitButton\");\n    let factButton = document.getElementById(\"factButton\");\n    let jokeButton = document.getElementById(\"jokeButton\");\n\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      setMode('dark');\n      toggle.className = \"tag is-light\";\n      if (jokeButton !== null) {\n        jokeButton.className = \"button is-light\";\n      }\n      if (homeButton !== null) {\n        homeButton.className = \"button is-light\";\n      }\n      if (submitButton !== null) {\n        submitButton.className = \"button is-light\";\n      }\n      if (factButton !== null) {\n        factButton.className = \"button is-light\";\n      }\n\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setMode('light');\n      toggle.className = \"tag is-dark\";\n      if (homeButton !== null) {\n        homeButton.className = \"button is-dark\";\n      }\n      if (submitButton !== null) {\n        submitButton.className = \"button is-dark\";\n      }\n      if (factButton !== null) {\n        factButton.className = \"button is-dark\";\n      }\n      if (jokeButton !== null) {\n        jokeButton.className = \"button is-dark\";\n      }\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    if (localTheme) {\n      setTheme(localTheme);\n    } else {\n      setMode('light');\n    }\n  }, []);\n  return [theme, toggleTheme]\n};","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    justify-content: center;\n    transition: all 0.25s linear;\n  }`","import { lightTheme, darkTheme } from './../theme';\nimport { useDarkMode } from './../useDarkMode';\nimport './lightDarkToggle.css';\n\nfunction LightDarkToggle(props) {\n    const [theme, toggleTheme] = useDarkMode();\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    return (\n        <div>\n            <span class=\"tag is-black\" id=\"dark-light-mode\">Light/Dark Mode</span>\n            <label class=\"switch\"  >\n                <input type=\"checkbox\" id=\"toggle-switch\" onChange={props.onChange}/>\n                <span class=\"slider round\"></span>\n            </label>\n        </div>\n    );\n}\n\nexport default LightDarkToggle;","import React from 'react';\nimport axios from 'axios/dist/axios';\nimport { useEffect, useState } from 'react';\nimport './animalPage.css';\nimport TitlePane from '../TitlePane/titlePane';\nimport SubmitModal from './../SubmitModal/submitModal';\nimport Modal from './../Modal/modal';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './../theme';\nimport { useDarkMode } from './../useDarkMode';\nimport { GlobalStyles } from './../global';\nimport LightDarkToggle from './../LightDarkToggle/lightDarkToggle';\n\nlet answers = {};\n\nfunction GkQuestionBox() {\n  const [questionObjects, setQuestionObjects] = useState([]);\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  useEffect( () => {\n    const fetchData = async () => {\n      const result = await axios({\n        url: 'https://opentdb.com/api.php?amount=10&category=27&difficulty=easy',\n        method: 'get',\n      });\n\n      let questionObjectsTemp = [];\n      for (let i = 0; i<result.data.results.length; i++) {\n        questionObjectsTemp.push(result.data.results[i]);\n        answers[\"\"+i] = result.data.results[i].correct_answer;\n      }\n      setQuestionObjects(questionObjectsTemp);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={themeMode}>\n    <GlobalStyles />\n    <div>\n      <br></br>\n      <TitlePane />\n      <br></br>\n      <div class=\"right\">\n        <LightDarkToggle onChange={toggleTheme}/>\n      </div>\n      <div class=\"columns is-centered\">\n        <div class=\"column is-half\">\n            <form class=\"box\">\n            <h1 class=\"title is-1 has-text-centered\">Welcome to Animal Trivia!</h1>\n              {questionObjects.map((questionObj, index) => {\n                let options = [...questionObj.incorrect_answers].concat(questionObj.correct_answer);\n                shuffle(options);\n                return (\n                <div class=\"field\" key={'question-'+index}>\n                  <label class=\"label break_line\">{decodeHtml(questionObj.question)}</label>\n                  <div class=\"control\" key={'options-'+index}>\n                    {options.map((option, optionIndex) => (\n                      <div class=\"control\" key={'option-'+optionIndex}>\n                        <label class=\"label break_line\">\n                          <input type=\"radio\" name={\"option\"+index} class=\"radioButton\" objindex={''+index} option={''+option}/>\n                            {\"  \"+decodeHtml(option)}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )})}\n          </form>\n          <div class=\"column is-offset-10\">\n            <SubmitModal answers={answers} />\n          </div>\n        </div>\n      </div>\n      <div class=\"right-below-mode\">\n          <Modal text=\"Get a Fun Fact!\" id=\"factButton\" header=\"Here's a fun fact for you!\" type=\"fact\"\n          />\n        </div>\n        <div class=\"right-below-fact\">\n          <Modal text=\"Fancy a joke?\" id=\"jokeButton\" header=\"Here's a joke for you!\" type=\"joke\"/>\n        </div>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nfunction decodeHtml(html) {\n  let txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n}\n\nfunction shuffle(array) {\n  for(let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * i);\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nexport default GkQuestionBox;\n","import React from 'react';\nimport axios from 'axios/dist/axios';\nimport { useEffect, useState } from 'react';\nimport './mathPage.css';\nimport TitlePane from '../TitlePane/titlePane';\nimport SubmitModal from './../SubmitModal/submitModal';\nimport Modal from '../Modal/modal';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './../theme';\nimport { useDarkMode } from './../useDarkMode';\nimport { GlobalStyles } from './../global';\nimport LightDarkToggle from './../LightDarkToggle/lightDarkToggle';\n\nlet answers = {};\n\nconst MathQuestionBox = React.memo(function () {\n  const [questionObjects, setQuestionObjects] = useState([]);\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  useEffect( () => {\n    const fetchData = async () => {\n      const result = await axios({\n        url: 'https://opentdb.com/api.php?amount=10&category=19&difficulty=easy',\n        method: 'get',\n      });\n\n      let questionObjectsTemp = [];\n      for (let i = 0; i<result.data.results.length; i++) {\n        questionObjectsTemp.push(result.data.results[i]);\n        answers[\"\"+i] = result.data.results[i].correct_answer;\n      }\n      setQuestionObjects(questionObjectsTemp);\n    };\n     fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={themeMode}>\n    <GlobalStyles />\n    <div>\n      <br></br>\n      <TitlePane />\n      <br></br>\n      <div class=\"right\">\n        <LightDarkToggle onChange={toggleTheme}/>\n      </div>\n      <div class=\"columns is-centered\">\n        <div class=\"column is-half\">\n            <form class=\"box\">\n            <h1 class=\"title is-1 has-text-centered\">Welcome to Mathematics Trivia!</h1>\n              {questionObjects.map((questionObj, index) => {\n                let options = [...questionObj.incorrect_answers].concat(questionObj.correct_answer);\n                shuffle(options);\n                return (\n                <div class=\"field\" key={'question-'+index}>\n                  <label class=\"label break_line\">{decodeHtml(questionObj.question)}</label>\n                  <div class=\"control\" key={'options-'+index}>\n                    {options.map((option, optionIndex) => (\n                      <div class=\"control\" key={'option-'+optionIndex}>\n                        <label class=\"label break_line\">\n                          <input type=\"radio\" name={\"option\"+index} class=\"radioButton\" objindex={''+index} option={''+option}/>\n                            {\"  \"+decodeHtml(option)}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )})}\n          </form>\n          <div class=\"column is-offset-10\">\n            <SubmitModal answers={answers} />\n          </div>\n        </div>\n      </div>\n      <div class=\"right-below-mode\">\n          <Modal text=\"Get a Math Fun Fact!\" id=\"factButton\" header=\"Here's a fun fact for you!\" type=\"mathFact\"/>\n      </div>\n      <div class=\"right-below-fact\">\n          <Modal text=\"Fancy a joke?\" id=\"jokeButton\" header=\"Here's a joke for you!\" type=\"joke\"/>\n      </div>\n    </div>\n    </ThemeProvider>\n  );\n})\n\nfunction decodeHtml(html) {\n  let txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n}\n\nfunction shuffle(array) {\n  for(let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * i);\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nexport default MathQuestionBox;\n","import React from 'react';\nimport axios from 'axios/dist/axios';\nimport { useEffect, useState } from 'react';\nimport './filmPage.css';\nimport TitlePane from './../TitlePane/titlePane';\nimport SubmitModal from './../SubmitModal/submitModal';\nimport Modal from './../Modal/modal';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './../theme';\nimport { useDarkMode } from './../useDarkMode';\nimport { GlobalStyles } from './../global';\nimport LightDarkToggle from './../LightDarkToggle/lightDarkToggle';\n\nlet answers = {};\n\nfunction FilmQuestionBox() {\n  const [questionObjects, setQuestionObjects] = useState([]); \n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  \n  useEffect( () => {\n    const fetchData = async () => {\n      const result = await axios({\n        url: 'https://opentdb.com/api.php?amount=10&category=11&difficulty=easy',\n        method: 'get',\n      });\n\n      let questionObjectsTemp = [];\n      for (let i = 0; i<result.data.results.length; i++) {\n        questionObjectsTemp.push(result.data.results[i]);\n        answers[\"\"+i] = result.data.results[i].correct_answer;\n      }\n      setQuestionObjects(questionObjectsTemp);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={themeMode}>\n    <GlobalStyles />\n    <div>\n      <br></br>\n      <TitlePane />\n      <br></br>\n      <div class=\"right\">\n        <LightDarkToggle onChange={toggleTheme}/>\n      </div>\n      <div class=\"columns is-centered\">\n        <div class=\"column is-half\">\n            <form class=\"box\">\n            <h1 class=\"title is-1 has-text-centered\">Welcome to Film Trivia!</h1>\n              {questionObjects.map((questionObj, index) => {\n                let options = [...questionObj.incorrect_answers].concat(questionObj.correct_answer);\n                shuffle(options);\n                return (\n                <div class=\"field\" key={'question-'+index}>\n                  <label class=\"label break_line\">{decodeHtml(questionObj.question)}</label>\n                  <div class=\"control\" key={'options-'+index}>\n                    {options.map((option, optionIndex) => (\n                      <div class=\"control\" key={'option-'+optionIndex}>\n                        <label class=\"label break_line\">\n                          <input type=\"radio\" name={\"option\"+index} class=\"radioButton\" objindex={''+index} option={''+option}/>\n                            {\"  \"+decodeHtml(option)}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )})}\n          </form>\n          <div class=\"column is-offset-10\">\n            <SubmitModal answers={answers} />\n          </div>\n        </div>\n      </div>\n      <div class=\"right-below-mode\">\n          <Modal text=\"Get a Fun Fact!\" id=\"factButton\" header=\"Here's a fun fact for you!\" type=\"fact\"\n          />\n        </div>\n        <div class=\"right-below-fact\">\n          <Modal text=\"Fancy a joke?\" id=\"jokeButton\" header=\"Here's a joke for you!\" type=\"joke\"/>\n        </div>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nfunction decodeHtml(html) {\n  let txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n}\n\nfunction shuffle(array) {\n  for(let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * i);\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nexport default FilmQuestionBox;\n","import React from 'react';\nimport axios from 'axios/dist/axios';\nimport { useEffect, useState } from 'react';\nimport './geographyPage.css';\nimport TitlePane from './../TitlePane/titlePane';\nimport SubmitModal from './../SubmitModal/submitModal';\nimport Modal from './../Modal/modal';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './../theme';\nimport { useDarkMode } from './../useDarkMode';\nimport { GlobalStyles } from './../global';\nimport LightDarkToggle from './../LightDarkToggle/lightDarkToggle';\n\nlet answers = {};\n\nfunction GeographyQuestionBox() {\n  const [questionObjects, setQuestionObjects] = useState([]);\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  useEffect( () => {\n    const fetchData = async () => {\n      const result = await axios({\n        url: 'https://opentdb.com/api.php?amount=10&category=22&difficulty=easy',\n        method: 'get',\n      });\n\n      let questionObjectsTemp = [];\n      for (let i = 0; i<result.data.results.length; i++) {\n        questionObjectsTemp.push(result.data.results[i]);\n        answers[\"\"+i] = result.data.results[i].correct_answer;\n      }\n      setQuestionObjects(questionObjectsTemp);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={themeMode}>\n    <GlobalStyles />\n    <div>\n      <br></br>\n      <TitlePane />\n      <br></br>\n      <div class=\"right\">\n        <LightDarkToggle onChange={toggleTheme}/>\n      </div>\n      <div class=\"columns is-centered\">\n        <div class=\"column is-half\">\n            <form class=\"box\">\n            <h1 class=\"title is-1 has-text-centered\">Welcome to Geography Trivia!</h1>\n              {questionObjects.map((questionObj, index) => {\n                let options = [...questionObj.incorrect_answers].concat(questionObj.correct_answer);\n                shuffle(options);\n                return (\n                <div class=\"field\" key={'question-'+index}>\n                  <label class=\"label break_line\">{decodeHtml(questionObj.question)}</label>\n                  <div class=\"control\" key={'options-'+index}>\n                    {options.map((option, optionIndex) => (\n                      <div class=\"control\" key={'option-'+optionIndex}>\n                        <label class=\"label break_line\">\n                          <input type=\"radio\" name={\"option\"+index} class=\"radioButton\" objindex={''+index} option={''+option}/>\n                            {\"  \"+decodeHtml(option)}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )})}\n          </form>\n          <div class=\"column is-offset-10\">\n              <SubmitModal answers={answers}/>\n          </div>\n        </div>\n      </div>\n      <div class=\"right-below-mode\">\n          <Modal text=\"Get a Fun Fact!\" id=\"factButton\" header=\"Here's a fun fact for you!\" type=\"fact\"\n          />\n        </div>\n        <div class=\"right-below-fact\">\n          <Modal text=\"Fancy a joke?\" id=\"jokeButton\" header=\"Here's a joke for you!\" type=\"joke\"/>\n        </div>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nfunction decodeHtml(html) {\n  let txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n}\n\nfunction shuffle(array) {\n  for(let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * i);\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nexport default GeographyQuestionBox;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HomePage from './../HomePage/homePage';\nimport GkPage from '../GkPage/gkPage';\nimport AnimalPage from '../AnimalPage/animalPage';\nimport MathPage from '../MathPage/mathPage';\nimport FilmPage from '../FilmPage/filmPage';\nimport GeographyPage from '../GeographyPage/geographyPage';\n\nfunction TitlePane() {\n    return (\n        <div class=\"columns has-text-centered\">\n            <div class=\"column is-4\">\n                <button class=\"button is-dark\" id=\"home\" onClick={homeButtonPress}>\n                    <span class=\"icon-text\">\n                        <span class=\"icon\">\n                            <i class=\"fas fa-home\"></i>\n                        </span>\n                        <span>Home</span>\n                    </span>\n                </button>\n            </div>\n            <div class=\"box columns \">\n                <div class=\"column\">\n                    <span class=\"icon-text\">\n                        <h3 class=\"title is-4\">Categories</h3>\n                        <span class=\"icon\">\n                            <i class=\"fas fa-arrow-right\"></i>\n                        </span>\n                    </span>\n                </div>\n                <div class=\"column\">\n                    <div class=\"columns\">\n                        <div class=\"column\">\n                            <button class=\"button is-dark\" id=\"gk\" onClick={handleButtonPress}>\n                                General Knowledge\n                            </button>\n                        </div>\n                        <div class=\"column\">\n                            <button class=\"button is-dark\" id=\"animals\" onClick={handleButtonPress}>\n                                Animals\n                            </button>\n                        </div>\n                        <div class=\"column\">\n                            <button class=\"button is-dark\" id=\"mathematics\" onClick={handleButtonPress}>\n                                Mathematics\n                            </button>\n                        </div>\n                        <div class=\"column\">\n                            <button class=\"button is-dark\" id=\"film\" onClick={handleButtonPress}>\n                                Film\n                            </button>\n                        </div>\n                        <div class=\"column\">\n                            <button class=\"button is-dark\" id=\"geography\" onClick={handleButtonPress}>\n                                Geography\n                            </button>\n                        </div>\n                    </div>\n                </div>              \n            </div>\n        </div>\n    );\n}\n\nfunction homeButtonPress(event) {\n    window.location.reload();\n    ReactDOM.render(\n        <React.StrictMode>\n          <HomePage/> \n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n}\n\nfunction handleButtonPress(event) {\n    let buttonType = event.target.getAttribute('id');\n    if(buttonType === \"gk\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <GkPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"animals\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <AnimalPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"mathematics\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <MathPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"film\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <FilmPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"geography\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <GeographyPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    }\n}\n\nexport default TitlePane;","import React from 'react';\nimport axios from 'axios/dist/axios';\nimport { useEffect, useState } from 'react';\nimport './gkPage.css';\nimport TitlePane from '../TitlePane/titlePane';\nimport SubmitModal from './../SubmitModal/submitModal';\nimport Modal from './../Modal/modal';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './../theme';\nimport { useDarkMode } from './../useDarkMode';\nimport { GlobalStyles } from './../global';\nimport LightDarkToggle from './../LightDarkToggle/lightDarkToggle';\nimport { render } from '@testing-library/react';\n\nlet answers = {};\nlet questionObjectsTemp = [];\n\nfunction GkQuestionBox() {\n  const [questionObjects, setQuestionObjects] = useState([]);\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  useEffect( () => {\n    const fetchData = async () => {\n      const result = await axios({\n        url: 'https://opentdb.com/api.php?amount=10&category=9&difficulty=easy',\n        method: 'get',\n      });\n\n      for (let i = 0; i<result.data.results.length; i++) {\n        questionObjectsTemp.push(result.data.results[i]);\n        answers[\"\"+i] = result.data.results[i].correct_answer;\n      }\n      setQuestionObjects(questionObjectsTemp);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={themeMode}>\n    <GlobalStyles />\n    <div>\n      <br></br>\n      <TitlePane />\n      <br></br>\n      <div class=\"right\">\n        <LightDarkToggle onChange={toggleTheme}/>\n      </div>\n        <div class=\"columns is-centered\">\n          <div class=\"column is-half\">\n              <form class=\"box\">\n              <h1 class=\"title is-1 has-text-centered\">Welcome to General Knowledge Trivia!</h1>\n                {questionObjects.map((questionObj, index) => {\n                  let options = [...questionObj.incorrect_answers].concat(questionObj.correct_answer);\n                  shuffle(options);\n                  return (\n                  <div class=\"field\" key={'question-'+index}>\n                    <label class=\"label break_line\">{decodeHtml(questionObj.question)}</label>\n                    <div class=\"control\" key={'options-'+index}>\n                      {options.map((option, optionIndex) => (\n                        <div class=\"control\" key={'option-'+optionIndex}>\n                          <label class=\"label break_line\">\n                            <input type=\"radio\" name={\"option\"+index} class=\"radioButton\" objindex={''+index} option={''+option}/>\n                              {\"  \"+decodeHtml(option)}\n                          </label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )})}\n            </form>\n            <div class=\"column is-offset-10\">\n              <SubmitModal answers={answers}/>\n            </div>\n          </div>\n        </div>\n        <div class=\"right-below-mode\">\n          <Modal text=\"Get a Fun Fact!\" id=\"factButton\" header=\"Here's a fun fact for you!\" type=\"fact\"\n          />\n        </div>\n        <div class=\"right-below-fact\">\n          <Modal text=\"Fancy a joke?\" id=\"jokeButton\" header=\"Here's a joke for you!\" type=\"joke\"/>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nfunction decodeHtml(html) {\n  let txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n}\n\nfunction shuffle(array) {\n  for(let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * i);\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n};\n\nexport default GkQuestionBox;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport readyImage from './../images/areyouready.jpeg';\nimport GkPage from '../GkPage/gkPage';\nimport AnimalPage from '../AnimalPage/animalPage';\nimport MathPage from '../MathPage/mathPage';\nimport FilmPage from '../FilmPage/filmPage';\nimport GeographyPage from '../GeographyPage/geographyPage';\nimport './homePage.css';\nimport { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './../theme';\nimport { useDarkMode } from './../useDarkMode';\nimport { GlobalStyles } from './../global';\nimport LightDarkToggle from './../LightDarkToggle/lightDarkToggle';\n\nfunction HomePage() {\n\n    const [theme, toggleTheme] = useDarkMode();\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    return (\n        <ThemeProvider theme={themeMode}>\n          <GlobalStyles />\n            <section class=\"section\">\n                <div class=\"container\">\n                    <div class=\"columns is-centered\">\n                        <div class=\"column is-7\">\n                            <div class=\"box has-text-centered\">\n                                <h1 class=\"title is-1\">Welcome to Trivia!</h1>\n                                <h3 class=\"subtitle is-4\">\n                                    Choose a category and answer the questions in it. \n                                    If you finish answering 10 questions in any category, you win the game! \n                                    Try and get a perfect score in all the categories! If you get tired of trivia, \n                                    and feel like learning something new, check out the random fun fact generator, or if you're \n                                    in the mood for a silly joke check out the joke generator for some good laughs.\n                                </h3>\n                                <figure class=\"image is-3by2\">\n                                    <img src={readyImage} alt=\"homepage\"/>\n                                </figure>\n                                <br></br>\n                                <h4 class=\"title is-4\">Choose your category:</h4>\n                                <div class=\"columns\">\n                                    <div class=\"column\">\n                                        <div class=\"columns is-offset-6\">\n                                            <div class=\"column\">\n                                                <button class=\"button is-dark\" id=\"gk\" onClick={handleButtonPress}>\n                                                    General Knowledge\n                                                </button>\n                                            </div>\n                                            <div class=\"column\">\n                                                <button class=\"button is-dark\" id=\"animals\" onClick={handleButtonPress}>\n                                                    Animals\n                                                </button>\n                                            </div>\n                                            <div class=\"column\">\n                                                <button class=\"button is-dark\" id=\"mathematics\" onClick={handleButtonPress}>\n                                                    Mathematics\n                                                </button>\n                                            </div>\n                                            <div class=\"column\">\n                                                <button class=\"button is-dark\" id=\"film\" onClick={handleButtonPress}>\n                                                    Film\n                                                </button>\n                                            </div>\n                                            <div class=\"column\">\n                                                <button class=\"button is-dark\" id=\"geography\" onClick={handleButtonPress}>\n                                                    Geography\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"topright\">\n                        <LightDarkToggle onChange={toggleTheme} />\n                    </div>\n                </div>\n            </section>\n    </ThemeProvider>\n    );\n}\n\nfunction handleButtonPress(event) {\n    let buttonType = event.target.getAttribute('id');\n    if(buttonType === \"gk\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <GkPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"animals\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <AnimalPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"mathematics\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <MathPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"film\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <FilmPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    } else if (buttonType === \"geography\") {\n        ReactDOM.render(\n            <React.StrictMode>\n                <GeographyPage />\n                <br></br>\n            </React.StrictMode>,\n            document.getElementById('root')\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from './HomePage/homePage.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HomePage/> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}